name: CI
on: [push]

jobs:

  build-mac-all:
    runs-on: macos-latest

    steps:

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make macOS client
      run: make -j3 -C cli-shared
    - uses: actions/upload-artifact@v1
      with:
        name: orchid-mac
        path: cli-shared/out-mac/x86_64/orchid

    - name: make macOS server
      run: make -j3 -C srv-shared
    - uses: actions/upload-artifact@v1
      with:
        name: orchidd-mac
        path: srv-shared/out-mac/x86_64/orchidd

    - name: df -k
      run: df -k


  build-mac-app:
    runs-on: macos-latest

    steps:

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: pod install
      run: make -C app-macos out-mac/XCBuildData/build.db
    - name: make macOS .app
      run: debug=ldid make -j3 -C app-macos

    - name: df -k
      run: df -k


  build-ios-app:
    runs-on: macos-latest

    steps:

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make iOS .ipa
      run: debug=ldid make -j3 -C app-ios

    - name: df -k
      run: df -k


  build-lnx-cli:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Linux client
      run: debug=crossndk make -j3 -C cli-shared
    - uses: actions/upload-artifact@v1
      with:
        name: orchid-lnx
        path: cli-shared/out-lnx/x86_64/orchid

    - name: df -k
      run: df -k


  build-lnx-srv:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Linux server
      run: debug=crossndk make -j3 -C srv-shared
    - uses: actions/upload-artifact@v1
      with:
        name: orchidd-lnx
        path: srv-shared/out-lnx/x86_64/orchidd

    - name: df -k
      run: df -k


  build-lnx-dkr:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup-all.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Linux server
      run: cd srv-shared && ./docker.sh


  build-lnx-bld:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v1

    - name: make Linux server
      run: docker build --build-arg GIT_REPOSITORY=https://github.com/${{ github.repository }}.git --build-arg GIT_COMMIT=${{ github.sha }} -t orchidd:latest srv-docker
    - name: docker save
      run: docker save -o orchidd.tar orchidd:latest
    - uses: actions/upload-artifact@v1
      with:
        name: orchidd-dkr
        path: orchidd.tar


  build-lnx-mac:
    runs-on: macos-latest

    steps:

    - name: install NDK r21
      run: echo y | sudo -E "${ANDROID_HOME}/tools/bin/sdkmanager" "ndk;21.0.6113669" >/dev/null

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Linux server
      run: ANDROID_NDK_HOME=~/Library/Android/sdk/ndk/21.0.6113669 make -j3 -C srv-shared target=lnx


  build-lnx-bad:
    runs-on: ubuntu-latest

    steps:

    - name: apt-get install
      run: DEBIAN_FRONTEND=noninteractive sudo -E apt-get -y install clang-tidy-9 libc++-9-dev libc++abi-9-dev

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Linux server
      run: make -j3 -C srv-shared

    - name: df -k
      run: df -k


  build-win-srv:
    runs-on: ubuntu-latest

    steps:

    - name: apt-get install
      run: DEBIAN_FRONTEND=noninteractive sudo -E apt-get -y install mingw-w64

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Windows server
      run: make -j3 -C srv-shared target=win
    - uses: actions/upload-artifact@v1
      with:
        name: orchidd-w64
        path: srv-shared/out-win/x86_64/orchidd.exe

    - name: df -k
      run: df -k


  build-win-tst:
    runs-on: ubuntu-latest

    steps:

    - name: apt-get install
      run: DEBIAN_FRONTEND=noninteractive sudo -E apt-get -y install mingw-w64

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Windows test
      run: make -j3 -C tst-network target=win

    - name: df -k
      run: df -k


  build-and-a64:
    runs-on: ubuntu-latest

    steps:

    - uses: actions/checkout@v1
    - name: env/setup
      run: env/setup.sh
    - name: git submodule
      run: env/submodule.sh --jobs 3

    - name: make Android .apk
      run: make -j3 -C app-android precache=--no-ios jni=arm64-v8a
    - uses: actions/upload-artifact@v1
      with:
        name: orchid-apk64
        path: app-android/out-and/Orchid.apk
        #path: app-android/build/outputs/apk/release/app-android-release-unsigned.apk

    - name: df -k
      run: df -k
